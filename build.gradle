import javax.swing.SpringLayout

// Works with Gradle 5.7 and Java 12

// To run this do:
// ./gradlew run

// To build a distribution zip:
// ./gradlew distZip

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.22.3'
}

sourceCompatibility = 11
targetCompatibility = 11

version = '1.0'
group = 'commitToMaster'

java {
    modularity.inferModulePath.set(true)
}

application {
    mainModule = 'azterketa' // name defined in module-info.java
    mainClass = 'ehu.isad.Main'
}



// ext.moduleName = 'gradlejavafxhelloworld'
mainClassName = "$moduleName/ehu.isad.Main"


javafx {
    version = "12"
    modules = [ ]
}

dependencies {
    // implementation 'com.google.code.gson:gson:2.8.6'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.32.3.2'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.code.gson:gson:2.8.6'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    // compile group: 'org.apache.poi', name: 'poi', version: '3.9'
    // compile 'org.apache.commons:commons-csv:1.8'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile 'commons-codec:commons-codec:1.15'

}

repositories {
    mavenCentral()
}
jlink {
    addExtraDependencies("javafx")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'WhatWebGUI'
        jvmArgs = [
                "--add-opens", "javafx.graphics/javafx.css=de.jensd.fx.fontawesomefx.commons",'-Dlog4j.configurationFile=./log4j2.xml'
        ]
    }

    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            imageOptions += ['--icon', 'src/main/resources/img/favicon.ico']
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        } else if (org.gradle.internal.os.OperatingSystem.current().macOsX) {
            imageOptions += ['--icon', 'src/main/resources/img/iconsmall.icns']
        } else if (org.gradle.internal.os .OperatingSystem.current().linux) {
            imageOptions += ['--icon', 'src/main/resources/img/iconsmall.png']
            installerOptions += ['--linux-shortcut']
            installerType = "deb";
        }
    }
}

run {
    inputs.property('moduleName', moduleName)
    doFirst {
        if (System.getProperty("os.name").split(" ")[0] == "Mac"){
            def newArgs = [ '--add-exports','java.desktop/com.apple.eawt=ALL-UNNAMED',]
            jvmArgs = jvmArgs + newArgs
        }
        jvmArgs = jvmArgs + ['--add-opens', 'javafx.graphics/javafx.css=de.jensd.fx.fontawesomefx.commons',
                             '--module-path', classpath.asPath,
                             '--patch-module', "$moduleName=" + files(sourceSets.main.output.resourcesDir).asPath,
                             '--module', "$mainClassName",
        ]
        classpath = files()
    }
}
